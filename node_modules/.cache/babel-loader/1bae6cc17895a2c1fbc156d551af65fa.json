{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/New_NawSociale/src/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FlipMove from 'react-flip-move';\nimport './Messages.css';\nimport MessagesFooter from './MessagesFooter';\nimport MessagesRow from './MessagesRow';\nimport axios from './axios';\nimport Pusher from 'pusher-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n  cluster: 'mt1'\n});\n\nfunction Messages(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  const sync = async () => {\n    await axios.get('/retrieve/conversation').then(res => {\n      console.log(res.data);\n      setMessages(res.data);\n    });\n  };\n\n  useEffect(() => {\n    sync();\n  }, []);\n  useEffect(() => {\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      sync();\n    });\n  });\n  useEffect(() => {\n    setUsername(prompt('Chnowa ismik ?'));\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault(); // khater kif 3mlat form, par défaut page trefrechi ro7ha, donc messaget yetfaskhou..\n    // function that will allow us to send a message\n\n    axios.post('/save/message', {\n      username: username,\n      message: input,\n      timestamp: Date.now()\n    }); //setMessages([...messages, {username: username, message: input}]); // ... hiye append\n\n    setInput('');\n  };\n\n  const sendEmoji = event => {// db.collection('messages').add({\n    //   message: '👍',\n    // username: username,\n    //timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    // })\n    //setMessages([...messages, {username: username, message:'👍'}]); // ... hiye append\n  };\n\n  const onChange = event => {\n    setInput(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    style: {\n      borderColor: props.box__color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message__body\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(MessagesRow, {\n          user: username,\n          mesg: message\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message__footer_\",\n      children: /*#__PURE__*/_jsxDEV(MessagesFooter, {\n        input: input,\n        onChange: onChange,\n        sendMessage: sendMessage,\n        sendEmoji: sendEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"n/bLJalpskqYPZfdEdrsvptYfXg=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/New_NawSociale/src/Messages.js"],"names":["React","useState","useEffect","FlipMove","MessagesFooter","MessagesRow","axios","Pusher","pusher","cluster","Messages","props","input","setInput","messages","setMessages","username","setUsername","sync","get","then","res","console","log","data","channel","subscribe","bind","prompt","sendMessage","event","preventDefault","post","message","timestamp","Date","now","sendEmoji","onChange","target","value","borderColor","box__color","map","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport FlipMove from 'react-flip-move';\nimport './Messages.css';\nimport MessagesFooter from './MessagesFooter';\nimport MessagesRow from './MessagesRow';\nimport axios from './axios';\nimport Pusher from 'pusher-js';\n\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n    cluster: 'mt1'\n  });\n\n\nfunction Messages(props) {\n\n    const [input, setInput] = useState('');\n    \n    const [messages, setMessages] = useState([]);\n    const [username, setUsername] = useState('');\n    \n    \n    const sync = async() => {\n        await axios.get('/retrieve/conversation').then((res) => {\n            console.log(res.data);\n            setMessages(res.data);\n        })\n    };\n\n    useEffect(()=>{\n        sync()\n    }, [])\n\n    useEffect(() => {\n        const channel = pusher.subscribe('messages');\n        channel.bind('newMessage', function(data) {\n            sync();\n        });\n    })\n\n    useEffect(() => {\n        setUsername(prompt('Chnowa ismik ?'));\n    }, []);\n\n    const sendMessage = event => { \n        event.preventDefault(); // khater kif 3mlat form, par défaut page trefrechi ro7ha, donc messaget yetfaskhou..\n        // function that will allow us to send a message\n        \n        axios.post('/save/message', {\n            username: username,\n            message: input,\n            timestamp: Date.now()\n        })\n        \n        //setMessages([...messages, {username: username, message: input}]); // ... hiye append\n        setInput('');\n    };\n\n    const sendEmoji = event => {\n\n       // db.collection('messages').add({\n         //   message: '👍',\n           // username: username,\n            //timestamp: firebase.firestore.FieldValue.serverTimestamp()\n       // })\n        //setMessages([...messages, {username: username, message:'👍'}]); // ... hiye append\n    };\n\n    const onChange = event => {\n        setInput(event.target.value);\n    };\n    return (\n        \n        <div className='messages' style={{borderColor: props.box__color}}>\n            \n            <div className='message__body'>\n\n                <FlipMove>\n                   \n                    {\n                        messages.map(message => (\n                        \n                            <MessagesRow key={message._id} user={username} mesg={message}/>\n\n                        ))\n                    }\n            \n                </FlipMove>\n                \n            </div>\n            \n            <div className='message__footer_'>\n\n                <MessagesFooter input={input} \n                            onChange={onChange} sendMessage={sendMessage} sendEmoji={sendEmoji}/>\n            \n            </div>\n            \n\n        </div>\n    )\n    \n}\n\nexport default Messages"]},"metadata":{},"sourceType":"module"}