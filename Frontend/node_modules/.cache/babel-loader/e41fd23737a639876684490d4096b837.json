{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/Frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from './Firebase';\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [lastMsg, setLastMesg] = useState('');\n  const [lastPhot, setLastPhoto] = useState('');\n  const [lastTimestamp, setLastTimestamp] = useState('');\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const user = useSelector(selectUser);\n\n  const getConversation = chatId => {\n    if (chatId) {\n      axios.get(`/get/conversation?id=${chatId}`).then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getConversation(chatId);\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: [\" \", chatName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(({\n          id,\n          data\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          contents: data\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"ikteb hneye\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MicIcon, {\n          className: \"chat__mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"dZKq4eYvc9kRg5VHfFS3xRsMEOc=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/Frontend/src/Chat.js"],"names":["React","useEffect","useState","MicIcon","IconButton","Message","useSelector","selectChatId","selectChatName","db","firebase","selectUser","FlipMove","axios","Chat","input","setInput","messages","setMessages","lastMsg","setLastMesg","lastPhot","setLastPhoto","lastTimestamp","setLastTimestamp","chatName","chatId","user","getConversation","get","then","res","data","conversation","sendMessage","e","preventDefault","post","message","timestamp","Date","now","map","id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,sBAA7C;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACiB,OAAD,EAAUC,WAAV,IAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACmB,QAAD,EAAWC,YAAX,IAA2BpB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMuB,QAAQ,GAAGnB,WAAW,CAACE,cAAD,CAA5B;AACA,QAAMkB,MAAM,GAAGpB,WAAW,CAACC,YAAD,CAA1B;AACA,QAAMoB,IAAI,GAAGrB,WAAW,CAACK,UAAD,CAAxB;;AAEA,QAAMiB,eAAe,GAAIF,MAAD,IAAY;AAChC,QAAIA,MAAJ,EAAY;AACRb,MAAAA,KAAK,CAACgB,GAAN,CAAW,wBAAuBH,MAAO,EAAzC,EAA4CI,IAA5C,CAAkDC,GAAD,IAAS;AACtDb,QAAAA,WAAW,CAACa,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,YAAb,CAAX;AACH,OAFD;AAGH;AACJ,GAND;;AAQAhC,EAAAA,SAAS,CAAE,MAAM;AACb2B,IAAAA,eAAe,CAACF,MAAD,CAAf;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAvB,IAAAA,KAAK,CAACwB,IAAN,CAAY,mBAAkBX,MAAO,EAArC,EAAwC;AACpCY,MAAAA,OAAO,EAAEvB,KAD2B;AAEpCwB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFyB;AAGpCd,MAAAA,IAAI,EAAEA;AAH8B,KAAxC;AAMAX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,uCACA;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,0BAA+BS,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BAEI,QAAC,QAAD;AAAA,kBACKR,QAAQ,CAACyB,GAAT,CAAa,CAAC;AAACC,UAAAA,EAAD;AAAKX,UAAAA;AAAL,SAAD,kBACV,QAAC,OAAD;AAAkB,UAAA,QAAQ,EAAEA;AAA5B,WAAcW,EAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAXA,eAuBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA,gCAEI;AACI,UAAA,KAAK,EAAE5B,KADX;AAEI,UAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACS,MAAF,CAASC,KAAV,CAF7B;AAGI,UAAA,WAAW,EAAC,aAHhB;AAG8B,UAAA,IAAI,EAAC;AAHnC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAQ,UAAA,OAAO,EAAEX,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,UAAD;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH;;GAhFQpB,I;UASYR,W,EACFA,W,EACFA,W;;;KAXRQ,I;AAkFT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './Chat.css';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message'\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from './Firebase';\nimport firebase from 'firebase';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js'\n\nfunction Chat() {\n\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const [lastMsg, setLastMesg] = useState('');\n    const [lastPhot, setLastPhoto] = useState('');\n    const [lastTimestamp, setLastTimestamp] = useState('');\n\n    const chatName = useSelector(selectChatName);\n    const chatId = useSelector(selectChatId);\n    const user = useSelector(selectUser);\n\n    const getConversation = (chatId) => {\n        if (chatId) {\n            axios.get(`/get/conversation?id=${chatId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect (() => {\n        getConversation(chatId)\n    }, [chatId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        axios.post(`/new/message?id=${chatId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user\n        })\n\n        setInput(\"\");\n    };\n\n    return (\n        <div className='chat'>\n\n        {/* chat header */}\n            <div className='chat__header'>\n                <h4>To:\n                <span className='chat__name'> {chatName}</span>\n                </h4>\n                <strong>Details</strong>\n            </div>\n        {/* chat messages */}\n\n        <div className='chat__messages'>\n            \n            <FlipMove>\n                {messages.map(({id, data}) => (\n                    <Message key={id} contents={data} />\n                ))}\n            </FlipMove>\n            \n        </div>\n\n\n        {/* chat input */}\n            <div className='chat__input'>\n                <form>\n                    \n                    <input \n                        value={input} \n                        onChange={(e) => setInput(e.target.value)} \n                        placeholder='ikteb hneye' type='text'/>\n                        \n                    <button onClick={sendMessage}>Send Message</button>\n                \n                </form>\n\n                <IconButton>\n                    <MicIcon className='chat__mic'/>\n                </IconButton>\n                \n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}