{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from './Firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  useEffect(() => {\n    if (chatId) {\n      db.collection('chats').doc(chatId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      }))));\n    }\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    setInput(''); // Firebase\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: [\" \", chatName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: messages.map(({\n        id,\n        data\n      }) => /*#__PURE__*/_jsxDEV(Message, {\n        contents: data\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"ikteb hneye\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MicIcon, {\n          className: \"chat__mic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"7YXjoITW1u254ANJBQ32t6KWsyM=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/src/Chat.js"],"names":["React","useEffect","useState","MicIcon","IconButton","Message","useSelector","selectChatId","selectChatName","db","Chat","input","setInput","messages","setMessages","chatName","chatId","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","sendMessage","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './Chat.css';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message'\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport db from './Firebase';\n\nfunction Chat() {\n\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const chatName = useSelector(selectChatName);\n    const chatId = useSelector(selectChatId);\n\n    useEffect (() => {\n        if (chatId) {\n            db.collection('chats').doc(chatId).collection('messages')\n            .orderBy('timestamp', 'desc')\n            .onSnapshot(snapshot => (\n                setMessages(\n                    snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                })))\n            ))\n        }\n    }, [chatId])\n\n    const sendMessage = (e) => {\n        \n        e.preventDefault();\n        setInput('');\n\n        // Firebase\n    }\n\n    return (\n        <div className='chat'>\n\n        {/* chat header */}\n            <div className='chat__header'>\n                <h4>To:\n                <span className='chat__name'> {chatName}</span>\n                </h4>\n                <strong>Details</strong>\n            </div>\n        {/* chat messages */}\n\n        <div className='chat__messages'>\n\n            {messages.map(({id, data}) => (\n                <Message key={id} contents={data} />\n            ))}\n\n        </div>\n\n\n        {/* chat input */}\n            <div className='chat__input'>\n                <form>\n                    \n                    <input \n                    value={input} \n                    onChange={(e) => setInput(e.target.value)} \n                    placeholder='ikteb hneye' type='text'/>\n                    \n                    <button onClick={sendMessage}>Send Message</button>\n                \n                </form>\n\n                <IconButton>\n                    <MicIcon className='chat__mic'/>\n                </IconButton>\n                \n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}