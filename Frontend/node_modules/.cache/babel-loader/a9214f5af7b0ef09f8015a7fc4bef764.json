{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport EmojiIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js';\nimport Pusher from 'pusher-js';\nimport Picker from 'emoji-picker-react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n  cluster: 'mt1'\n});\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const user = useSelector(selectUser);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  useEffect(() => {\n    //console.log(chosenEmoji.emoji)\n    console.log(\"heeeello\");\n  }, [chosenEmoji]);\n\n  const getConversation = chatId => {\n    if (chatId) {\n      axios.get(`/get/conversation?id=${chatId}`).then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    pusher.unsubscribe('messages');\n    getConversation(chatId);\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      getConversation(chatId);\n    });\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  const sendThumb = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: '👍',\n      timestamp: Date.now(),\n      user: user\n    });\n  };\n\n  const sendEmoji = e => {\n    console.log(chosenEmoji.emoji);\n    e.preventDefault();\n    setInput(input + chosenEmoji.emoji);\n  };\n\n  const deleteConversation = e => {\n    if (chatId) {\n      axios.delete(`/delete/conversation?id=${chatId}`).then(res => {\n        //setMessages(res.data[0].conversation)\n        console.log('chat deleted');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: [\" \", chatName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete__me\",\n        disabled: !chatName,\n        onClick: deleteConversation,\n        children: \"Delete me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(({\n          user,\n          _id,\n          message,\n          timestamp\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          id: _id,\n          sender: user,\n          message: message,\n          timestamp: timestamp\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"ikteb hneye\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n        className: \"send__icon\",\n        disabled: !input,\n        type: \"submit\",\n        onClick: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ThumbUpIcon, {\n        className: \"thumb__icon\",\n        onClick: sendThumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        drop: \"up\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: onEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"Jv239lYcY6gOM0dEXnZ9ozFb7wU=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js"],"names":["React","useEffect","useState","SendIcon","EmojiIcon","Message","useSelector","selectChatId","selectChatName","selectUser","FlipMove","axios","Pusher","Picker","Dropdown","ThumbUpIcon","pusher","cluster","Chat","input","setInput","messages","setMessages","chosenEmoji","setChosenEmoji","chatName","chatId","user","onEmojiClick","event","emojiObject","console","log","getConversation","get","then","res","data","conversation","unsubscribe","channel","subscribe","bind","sendMessage","e","preventDefault","post","message","timestamp","Date","now","sendThumb","sendEmoji","emoji","deleteConversation","delete","map","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport EmojiIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message'\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js'\nimport Pusher from 'pusher-js';\nimport Picker from 'emoji-picker-react';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\n\n\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n    cluster: 'mt1'\n  });\n\nfunction Chat() {\n    \n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    const chatName = useSelector(selectChatName);\n    const chatId = useSelector(selectChatId);\n    const user = useSelector(selectUser);\n\n    const onEmojiClick = (event, emojiObject) => {\n        setChosenEmoji(emojiObject);\n        \n    };\n\n    useEffect(() => {\n        //console.log(chosenEmoji.emoji)\n        console.log(\"heeeello\")\n    }, [chosenEmoji])\n\n    const getConversation = (chatId) => {\n        if (chatId) {\n            axios.get(`/get/conversation?id=${chatId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect (() => {\n        pusher.unsubscribe('messages')\n    \n        getConversation(chatId);\n\n        const channel = pusher.subscribe('messages');\n        channel.bind('newMessage', function (data) {\n            getConversation(chatId)\n        });\n\n    }, [chatId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        axios.post(`/new/message?id=${chatId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user\n        })\n    \n        setInput(\"\");\n    };\n\n    const sendThumb = (e) => {\n        e.preventDefault();\n        axios.post(`/new/message?id=${chatId}`, {\n            message: '👍',\n            timestamp: Date.now(),\n            user: user\n        })\n\n    };\n\n    const sendEmoji = e => {\n        console.log(chosenEmoji.emoji);\n        e.preventDefault();\n        setInput(input + chosenEmoji.emoji)\n    }\n\n    const deleteConversation = (e) => {\n    \n        if (chatId) {\n            axios.delete(`/delete/conversation?id=${chatId}`).then((res) => {\n                //setMessages(res.data[0].conversation)\n                \n                console.log('chat deleted')\n            })\n        }\n    }\n\n    return (\n        <div className='chat'>\n\n        {/* chat header */}\n            <div className='chat__header'>\n                <h4>To:\n                    <span className='chat__name'> {chatName}</span>\n                </h4>\n                \n                <div className='delete__me' disabled={!chatName} onClick={deleteConversation}>Delete me</div>\n\n            </div>\n\n        {/* chat messages */}\n\n        <div className='chat__messages'>\n            \n            <FlipMove>\n                {messages.map(({ user, _id, message, timestamp }) => (\n                    <Message key={_id} id={_id} sender={user} message={message} timestamp={timestamp}\n                    />\n                ))}\n            </FlipMove>\n            \n        </div>\n\n        {/* chat input */}\n            <div className='chat__input'>\n                \n                <form>    \n                    <input \n                        value={input} \n                        onChange={(e) => setInput(e.target.value)} \n                        placeholder='ikteb hneye' type='text'/>\n                    \n                    <button onClick={sendMessage}>Send Message</button>\n                    \n                </form>\n                \n                <SendIcon className='send__icon' disabled={!input} type='submit' onClick={sendMessage}/>\n \n                <ThumbUpIcon className='thumb__icon' onClick={sendThumb}/>\n                \n                <Dropdown drop='up'>\n                    \n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        <EmojiIcon/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Picker onEmojiClick={onEmojiClick} />\n                    </Dropdown.Menu>\n\n                </Dropdown>\n\n                        \n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}