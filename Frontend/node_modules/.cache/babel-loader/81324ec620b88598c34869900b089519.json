{"ast":null,"code":"const requests = require(\"./requests\");\n\nconst NotificationConfig = require(\"./notification_config\");\n\nfunction NotificationClient(options) {\n  this.config = new NotificationConfig(options);\n}\n\nNotificationClient.prototype.notify = function (interests, notification) {\n  if (!Array.isArray(interests)) {\n    throw new Error(\"Interests must be an array\");\n  }\n\n  if (interests.length == 0) {\n    throw new Error(\"Interests array must not be empty\");\n  }\n\n  const body = Object.assign({\n    interests: interests\n  }, notification);\n  return requests.send(this.config, {\n    method: \"POST\",\n    body: body,\n    path: \"/notifications\"\n  });\n};\n\nmodule.exports = NotificationClient;","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/Frontend/node_modules/pusher/lib/notification_client.js"],"names":["requests","require","NotificationConfig","NotificationClient","options","config","prototype","notify","interests","notification","Array","isArray","Error","length","body","Object","assign","send","method","path","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;;AAEA,SAASE,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,OAAKC,MAAL,GAAc,IAAIH,kBAAJ,CAAuBE,OAAvB,CAAd;AACD;;AAEDD,kBAAkB,CAACG,SAAnB,CAA6BC,MAA7B,GAAsC,UAAUC,SAAV,EAAqBC,YAArB,EAAmC;AACvE,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,SAAd,CAAL,EAA+B;AAC7B,UAAM,IAAII,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,MAAIJ,SAAS,CAACK,MAAV,IAAoB,CAAxB,EAA2B;AACzB,UAAM,IAAID,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,QAAME,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAER,IAAAA,SAAS,EAAEA;AAAb,GAAd,EAAwCC,YAAxC,CAAb;AACA,SAAOT,QAAQ,CAACiB,IAAT,CAAc,KAAKZ,MAAnB,EAA2B;AAChCa,IAAAA,MAAM,EAAE,MADwB;AAEhCJ,IAAAA,IAAI,EAAEA,IAF0B;AAGhCK,IAAAA,IAAI,EAAE;AAH0B,GAA3B,CAAP;AAKD,CAfD;;AAiBAC,MAAM,CAACC,OAAP,GAAiBlB,kBAAjB","sourcesContent":["const requests = require(\"./requests\")\nconst NotificationConfig = require(\"./notification_config\")\n\nfunction NotificationClient(options) {\n  this.config = new NotificationConfig(options)\n}\n\nNotificationClient.prototype.notify = function (interests, notification) {\n  if (!Array.isArray(interests)) {\n    throw new Error(\"Interests must be an array\")\n  }\n\n  if (interests.length == 0) {\n    throw new Error(\"Interests array must not be empty\")\n  }\n\n  const body = Object.assign({ interests: interests }, notification)\n  return requests.send(this.config, {\n    method: \"POST\",\n    body: body,\n    path: \"/notifications\",\n  })\n}\n\nmodule.exports = NotificationClient\n"]},"metadata":{},"sourceType":"script"}