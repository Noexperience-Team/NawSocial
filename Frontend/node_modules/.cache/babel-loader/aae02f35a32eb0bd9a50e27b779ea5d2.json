{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js';\nimport Pusher from 'pusher-js';\nimport { auth } from './Firebase';\nimport Picker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n  cluster: 'mt1'\n});\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const user = useSelector(selectUser);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n    setInput(chosenEmoji);\n  };\n\n  const getConversation = chatId => {\n    if (chatId) {\n      axios.get(`/get/conversation?id=${chatId}`).then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    pusher.unsubscribe('messages');\n    getConversation(chatId);\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      getConversation(chatId);\n    });\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: [\" \", chatName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => auth.signOut(),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(({\n          user,\n          _id,\n          message,\n          timestamp\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          id: _id,\n          sender: user,\n          message: message,\n          timestamp: timestamp\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"ikteb hneye\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"send__icon\",\n        disabled: !input,\n        type: \"submit\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"a0M5pIynlDa2AMaDc+yq/UvD9MM=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js"],"names":["React","useEffect","useState","SendIcon","IconButton","Message","useSelector","selectChatId","selectChatName","selectUser","FlipMove","axios","Pusher","auth","Picker","pusher","cluster","Chat","input","setInput","messages","setMessages","chosenEmoji","setChosenEmoji","chatName","chatId","user","onEmojiClick","event","emojiObject","getConversation","get","then","res","data","conversation","unsubscribe","channel","subscribe","bind","sendMessage","e","preventDefault","post","message","timestamp","Date","now","signOut","map","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message'\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js'\nimport Pusher from 'pusher-js';\nimport {auth} from './Firebase'\nimport Picker from 'emoji-picker-react';\n\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n    cluster: 'mt1'\n  });\n\n\nfunction Chat() {\n    \n    \n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    const chatName = useSelector(selectChatName);\n    const chatId = useSelector(selectChatId);\n    const user = useSelector(selectUser);\n\n    \n    const onEmojiClick = (event, emojiObject) => {\n        setChosenEmoji(emojiObject);\n        setInput(chosenEmoji);\n      };\n\n    const getConversation = (chatId) => {\n        if (chatId) {\n            axios.get(`/get/conversation?id=${chatId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect (() => {\n        pusher.unsubscribe('messages')\n    \n        getConversation(chatId)\n\n        const channel = pusher.subscribe('messages');\n        channel.bind('newMessage', function (data) {\n            getConversation(chatId)\n        });\n\n    }, [chatId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        axios.post(`/new/message?id=${chatId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user\n        })\n\n        setInput(\"\");\n    };\n\n    return (\n        <div className='chat' >\n\n        {/* chat header */}\n            <div className='chat__header'>\n                <h4>To:\n                <span className='chat__name'> {chatName}</span>\n                </h4>\n                <button onClick={() => auth.signOut()} >Log out</button>\n            </div>\n        {/* chat messages */}\n\n        <div className='chat__messages'>\n            \n            <FlipMove>\n            {messages.map(({ user, _id, message, timestamp }) => (\n            <Message key={_id} id={_id} sender={user} message={message} timestamp={timestamp} />\n                ))}\n            </FlipMove>\n            \n        </div>\n\n\n        {/* chat input */}\n            <div className='chat__input'>\n                <form>\n                    \n                    <input \n                        value={input} \n                        onChange={(e) => setInput(e.target.value)} \n                        placeholder='ikteb hneye' type='text'/>\n                        \n                    <button onClick={sendMessage}>Send Message</button>\n                \n                </form>\n\n                <IconButton className='send__icon' disabled={!input} type='submit' onClick={sendMessage}>\n                    <SendIcon/>\n                </IconButton>\n                \n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}