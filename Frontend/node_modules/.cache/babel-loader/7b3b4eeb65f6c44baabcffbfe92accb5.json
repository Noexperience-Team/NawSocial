{"ast":null,"code":"var _jsxFileName = \"/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmojiIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js';\nimport Pusher from 'pusher-js';\nimport { auth } from './Firebase';\nimport Picker from 'emoji-picker-react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport InputEmoji from \"react-input-emoji\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n  cluster: 'mt1'\n});\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const chatName = useSelector(selectChatName);\n  const chatId = useSelector(selectChatId);\n  const user = useSelector(selectUser);\n  const [text, setText] = useState(\"\");\n\n  function handleOnEnter(text) {\n    console.log(\"enter\", text);\n  }\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  const getConversation = chatId => {\n    if (chatId) {\n      axios.get(`/get/conversation?id=${chatId}`).then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    pusher.unsubscribe('messages');\n    getConversation(chatId);\n    const channel = pusher.subscribe('messages');\n    channel.bind('newMessage', function (data) {\n      getConversation(chatId);\n    });\n  }, [chatId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    axios.post(`/new/message?id=${chatId}`, {\n      message: input,\n      timestamp: Date.now(),\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  const deleteConversation = e => {\n    console.log(\"Hi\", chatId);\n\n    if (chatId) {\n      axios.delete(`/delete/conversation?id=${chatId}`).then(res => {\n        //setMessages(res.data[0].conversation)\n        console.log('chat deleted');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"To:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat__name\",\n          children: [\" \", chatName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteConversation,\n        children: \"Delete me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => auth.signOut(),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__messages\",\n      children: /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: messages.map(({\n          user,\n          _id,\n          message,\n          timestamp\n        }) => /*#__PURE__*/_jsxDEV(Message, {\n          id: _id,\n          sender: user,\n          message: message,\n          timestamp: timestamp\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"ikteb hneye\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n        value: text,\n        onChange: setText,\n        cleanOnEnter: true,\n        onEnter: handleOnEnter,\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: \"send__icon\",\n        disabled: !input,\n        type: \"submit\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        drop: \"up\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            onEmojiClick: onEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"sA0zNpemhKhuzJspZZ7rrxfAt8s=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/NawSocilae_Redux/Frontend/src/Chat.js"],"names":["React","useEffect","useState","SendIcon","IconButton","DeleteIcon","EmojiIcon","Message","useSelector","selectChatId","selectChatName","selectUser","FlipMove","axios","Pusher","auth","Picker","Dropdown","InputEmoji","pusher","cluster","Chat","input","setInput","messages","setMessages","chosenEmoji","setChosenEmoji","chatName","chatId","user","text","setText","handleOnEnter","console","log","onEmojiClick","event","emojiObject","getConversation","get","then","res","data","conversation","unsubscribe","channel","subscribe","bind","sendMessage","e","preventDefault","post","message","timestamp","Date","now","deleteConversation","delete","signOut","map","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './style/Chat.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmojiIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message'\nimport { useSelector } from 'react-redux';\nimport { selectChatId, selectChatName } from './features/chatSlice';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport axios from './axios.js'\nimport Pusher from 'pusher-js';\nimport {auth} from './Firebase'\nimport Picker from 'emoji-picker-react';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport InputEmoji from \"react-input-emoji\";\n\nconst pusher = new Pusher('470f630b8e55cfd2fd2c', {\n    cluster: 'mt1'\n  });\n\n\nfunction Chat() {\n    \n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    const chatName = useSelector(selectChatName);\n    const chatId = useSelector(selectChatId);\n    const user = useSelector(selectUser);\n\n    const [text, setText] = useState(\"\");\n\n    function handleOnEnter(text) {\n        \n        console.log(\"enter\", text);\n    }\n\n    \n    const onEmojiClick = (event, emojiObject) => {\n        setChosenEmoji(emojiObject);\n        \n      };\n\n    const getConversation = (chatId) => {\n        if (chatId) {\n            axios.get(`/get/conversation?id=${chatId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect (() => {\n        pusher.unsubscribe('messages')\n    \n        getConversation(chatId)\n\n        const channel = pusher.subscribe('messages');\n        channel.bind('newMessage', function (data) {\n            getConversation(chatId)\n        });\n\n    }, [chatId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        axios.post(`/new/message?id=${chatId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user\n        })\n\n        setInput(\"\");\n    };\n\n    const deleteConversation = (e) => {\n        console.log(\"Hi\",chatId);\n\n        if (chatId) {\n            axios.delete(`/delete/conversation?id=${chatId}`).then((res) => {\n                //setMessages(res.data[0].conversation)\n                \n                console.log('chat deleted')\n            })\n        }\n    }\n\n    return (\n        <div className='chat' >\n\n        {/* chat header */}\n            <div className='chat__header'>\n                <h4>To:\n                    <span className='chat__name'> {chatName}</span>\n                </h4>\n                \n                {/*<IconButton className='delete__icon'>\n                    <DeleteIcon />\n                </IconButton> */ }\n\n                <button onClick={deleteConversation}>Delete me</button>\n                \n                <button onClick={() => auth.signOut()} >Log out</button>\n            </div>\n        {/* chat messages */}\n\n        <div className='chat__messages'>\n            \n            <FlipMove>\n                {messages.map(({ user, _id, message, timestamp }) => (\n                <Message key={_id} id={_id} sender={user} message={message} timestamp={timestamp} />\n                    ))}\n            </FlipMove>\n            \n        </div>\n\n\n        {/* chat input */}\n            <div className='chat__input'>\n                <form>\n                    \n                    <input \n                        value={input} \n                        onChange={(e) => setInput(e.target.value)} \n                        placeholder='ikteb hneye' type='text'/>\n                    \n                    <button onClick={sendMessage}>Send Message</button>\n                    \n                </form>\n                <InputEmoji\n                    value={text}\n                    onChange={setText}\n                    cleanOnEnter\n                    onEnter={handleOnEnter}\n                    placeholder=\"Type a message\"\n                />\n                \n                <IconButton className='send__icon' disabled={!input} type='submit' onClick={sendMessage}>\n                    <SendIcon/>\n                </IconButton>\n\n                <Dropdown drop='up'>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        <EmojiIcon/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Picker onEmojiClick={onEmojiClick} />\n                    </Dropdown.Menu>\n                </Dropdown>             \n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}