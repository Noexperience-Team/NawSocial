{"ast":null,"code":"/** Contains information about an HTTP request error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} url request URL\n * @param [error] optional error cause\n * @param {Integer} [status] response status code, if received\n * @param {String} [body] response body, if received\n */\nfunction RequestError(message, url, error, status, body) {\n  this.name = \"PusherRequestError\";\n  this.stack = new Error().stack;\n  /** @member {String} error message */\n\n  this.message = message;\n  /** @member {String} request URL */\n\n  this.url = url;\n  /** @member optional error cause */\n\n  this.error = error;\n  /** @member {Integer} response status code, if received */\n\n  this.status = status;\n  /** @member {String} response body, if received */\n\n  this.body = body;\n}\n\nRequestError.prototype = new Error();\n/** Contains information about a WebHook error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} contentType WebHook content type\n * @param {String} body WebHook body\n * @param {String} signature WebHook signature\n */\n\nfunction WebHookError(message, contentType, body, signature) {\n  this.name = \"PusherWebHookError\";\n  this.stack = new Error().stack;\n  /** @member {String} error message */\n\n  this.message = message;\n  /** @member {String} WebHook content type */\n\n  this.contentType = contentType;\n  /** @member {String} WebHook body */\n\n  this.body = body;\n  /** @member {String} WebHook signature */\n\n  this.signature = signature;\n}\n\nWebHookError.prototype = new Error();\nexports.RequestError = RequestError;\nexports.WebHookError = WebHookError;","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/Frontend/node_modules/pusher/lib/errors.js"],"names":["RequestError","message","url","error","status","body","name","stack","Error","prototype","WebHookError","contentType","signature","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,IAAnD,EAAyD;AACvD,OAAKC,IAAL,GAAY,oBAAZ;AACA,OAAKC,KAAL,GAAa,IAAIC,KAAJ,GAAYD,KAAzB;AAEA;;AACA,OAAKN,OAAL,GAAeA,OAAf;AACA;;AACA,OAAKC,GAAL,GAAWA,GAAX;AACA;;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA;;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA;;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD;;AACDL,YAAY,CAACS,SAAb,GAAyB,IAAID,KAAJ,EAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,YAAT,CAAsBT,OAAtB,EAA+BU,WAA/B,EAA4CN,IAA5C,EAAkDO,SAAlD,EAA6D;AAC3D,OAAKN,IAAL,GAAY,oBAAZ;AACA,OAAKC,KAAL,GAAa,IAAIC,KAAJ,GAAYD,KAAzB;AAEA;;AACA,OAAKN,OAAL,GAAeA,OAAf;AACA;;AACA,OAAKU,WAAL,GAAmBA,WAAnB;AACA;;AACA,OAAKN,IAAL,GAAYA,IAAZ;AACA;;AACA,OAAKO,SAAL,GAAiBA,SAAjB;AACD;;AACDF,YAAY,CAACD,SAAb,GAAyB,IAAID,KAAJ,EAAzB;AAEAK,OAAO,CAACb,YAAR,GAAuBA,YAAvB;AACAa,OAAO,CAACH,YAAR,GAAuBA,YAAvB","sourcesContent":["/** Contains information about an HTTP request error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} url request URL\n * @param [error] optional error cause\n * @param {Integer} [status] response status code, if received\n * @param {String} [body] response body, if received\n */\nfunction RequestError(message, url, error, status, body) {\n  this.name = \"PusherRequestError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} request URL */\n  this.url = url\n  /** @member optional error cause */\n  this.error = error\n  /** @member {Integer} response status code, if received */\n  this.status = status\n  /** @member {String} response body, if received */\n  this.body = body\n}\nRequestError.prototype = new Error()\n\n/** Contains information about a WebHook error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} contentType WebHook content type\n * @param {String} body WebHook body\n * @param {String} signature WebHook signature\n */\nfunction WebHookError(message, contentType, body, signature) {\n  this.name = \"PusherWebHookError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} WebHook content type */\n  this.contentType = contentType\n  /** @member {String} WebHook body */\n  this.body = body\n  /** @member {String} WebHook signature */\n  this.signature = signature\n}\nWebHookError.prototype = new Error()\n\nexports.RequestError = RequestError\nexports.WebHookError = WebHookError\n"]},"metadata":{},"sourceType":"script"}