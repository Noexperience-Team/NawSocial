{"ast":null,"code":"// Redundant default as a workaround for this WebPack bug:\n// https://github.com/webpack/webpack/issues/4742\nconst fetch = require(\"node-fetch\").default;\n\nconst AbortController = require(\"abort-controller\").default;\n\nconst errors = require(\"./errors\");\n\nconst util = require(\"./util\");\n\nconst pusherLibraryVersion = require(\"./version\");\n\nconst RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true\n};\n\nfunction send(config, options) {\n  const method = options.method;\n  const path = config.prefixPath(options.path);\n  const body = options.body ? JSON.stringify(options.body) : undefined;\n  const url = `${config.getBaseURL()}${path}?${createSignedQueryString(config.token, {\n    method,\n    path,\n    params: options.params,\n    body: body\n  })}`;\n  const headers = {\n    \"x-pusher-library\": \"pusher-http-node \" + pusherLibraryVersion\n  };\n\n  if (body) {\n    headers[\"content-type\"] = \"application/json\";\n  }\n\n  let signal;\n  let timeout;\n\n  if (config.timeout) {\n    const controller = new AbortController();\n    timeout = setTimeout(() => controller.abort(), config.timeout);\n    signal = controller.signal;\n  }\n\n  return fetch(url, {\n    method,\n    body,\n    headers,\n    signal,\n    agent: config.agent\n  }).then(res => {\n    clearTimeout(timeout);\n\n    if (res.status >= 400) {\n      return res.text().then(body => {\n        throw new errors.RequestError(\"Unexpected status code \" + res.status, url, undefined, res.status, body);\n      });\n    }\n\n    return res;\n  }, err => {\n    clearTimeout(timeout);\n    throw new errors.RequestError(\"Request failed with an error\", url, err);\n  });\n}\n\nfunction createSignedQueryString(token, request) {\n  const timestamp = Date.now() / 1000 | 0;\n  const params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: \"1.0\"\n  };\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body);\n  }\n\n  if (request.params) {\n    for (const key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + \" is a required parameter and cannot be overidden\");\n      }\n\n      params[key] = request.params[key];\n    }\n  }\n\n  const method = request.method.toUpperCase();\n  const sortedKeyVal = util.toOrderedArray(params);\n  let queryString = sortedKeyVal.join(\"&\");\n  const signData = [method, request.path, queryString].join(\"\\n\");\n  queryString += \"&auth_signature=\" + token.sign(signData);\n  return queryString;\n}\n\nexports.send = send;\nexports.createSignedQueryString = createSignedQueryString;","map":{"version":3,"sources":["/media/amine/HDD1/Kraya/2DNI/TP/S2/Framework/Projet/IMessage-Clone/Frontend/node_modules/pusher/lib/requests.js"],"names":["fetch","require","default","AbortController","errors","util","pusherLibraryVersion","RESERVED_QUERY_KEYS","auth_key","auth_timestamp","auth_version","auth_signature","body_md5","send","config","options","method","path","prefixPath","body","JSON","stringify","undefined","url","getBaseURL","createSignedQueryString","token","params","headers","signal","timeout","controller","setTimeout","abort","agent","then","res","clearTimeout","status","text","RequestError","err","request","timestamp","Date","now","key","getMD5","Error","toUpperCase","sortedKeyVal","toOrderedArray","queryString","join","signData","sign","exports"],"mappings":"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","sourcesContent":["// Redundant default as a workaround for this WebPack bug:\n// https://github.com/webpack/webpack/issues/4742\nconst fetch = require(\"node-fetch\").default\nconst AbortController = require(\"abort-controller\").default\n\nconst errors = require(\"./errors\")\nconst util = require(\"./util\")\n\nconst pusherLibraryVersion = require(\"./version\")\n\nconst RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true,\n}\n\nfunction send(config, options) {\n  const method = options.method\n  const path = config.prefixPath(options.path)\n  const body = options.body ? JSON.stringify(options.body) : undefined\n\n  const url = `${config.getBaseURL()}${path}?${createSignedQueryString(\n    config.token,\n    {\n      method,\n      path,\n      params: options.params,\n      body: body,\n    }\n  )}`\n\n  const headers = {\n    \"x-pusher-library\": \"pusher-http-node \" + pusherLibraryVersion,\n  }\n\n  if (body) {\n    headers[\"content-type\"] = \"application/json\"\n  }\n\n  let signal\n  let timeout\n  if (config.timeout) {\n    const controller = new AbortController()\n    timeout = setTimeout(() => controller.abort(), config.timeout)\n    signal = controller.signal\n  }\n\n  return fetch(url, {\n    method,\n    body,\n    headers,\n    signal,\n    agent: config.agent,\n  }).then(\n    (res) => {\n      clearTimeout(timeout)\n      if (res.status >= 400) {\n        return res.text().then((body) => {\n          throw new errors.RequestError(\n            \"Unexpected status code \" + res.status,\n            url,\n            undefined,\n            res.status,\n            body\n          )\n        })\n      }\n      return res\n    },\n    (err) => {\n      clearTimeout(timeout)\n      throw new errors.RequestError(\"Request failed with an error\", url, err)\n    }\n  )\n}\n\nfunction createSignedQueryString(token, request) {\n  const timestamp = (Date.now() / 1000) | 0\n\n  const params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: \"1.0\",\n  }\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body)\n  }\n\n  if (request.params) {\n    for (const key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + \" is a required parameter and cannot be overidden\")\n      }\n      params[key] = request.params[key]\n    }\n  }\n\n  const method = request.method.toUpperCase()\n  const sortedKeyVal = util.toOrderedArray(params)\n  let queryString = sortedKeyVal.join(\"&\")\n\n  const signData = [method, request.path, queryString].join(\"\\n\")\n  queryString += \"&auth_signature=\" + token.sign(signData)\n\n  return queryString\n}\n\nexports.send = send\nexports.createSignedQueryString = createSignedQueryString\n"]},"metadata":{},"sourceType":"script"}